mergeSort :: (Ord a) => [a] -> [a]
mergeSort xs
    | length xs <= 1 = xs
    | otherwise = merge (mergeSort left) (mergeSort right)
  where
    (left, right) = splitAt (length xs `div` 2) xs

merge :: (Ord a) => [a] -> [a] -> [a]
merge [] ys = ys
merge xs [] = xs
merge (x:xs) (y:ys)
    | x <= y = x : merge xs (y:ys)
    | otherwise = y : merge (x:xs) ys

main :: IO ()
main = do
    let arr = [38, 27, 43, 3, 9, 82, 10]
    let result = mergeSort arr
    print result
